{"ast":null,"code":"import axios from 'axios';\nconst apiPort = `3003`;\nconst blocsUrl = `api/blocs`;\nexport const saveBlocService = async (blocObject, token) => {\n  try {\n    const response = await axios.post(blocsUrl, blocObject, {\n      headers: {\n        Authorization: token\n      },\n      baseURL: `${window.location.protocol}//${window.location.hostname}:${apiPort}`\n    });\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\nexport const getBlocsService = async token => {\n  try {\n    const response = await axios.get(blocsUrl, {\n      headers: {\n        Authorization: token\n      },\n      baseURL: `${window.location.protocol}//${window.location.hostname}:${apiPort}`\n    });\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};","map":{"version":3,"names":["axios","apiPort","blocsUrl","saveBlocService","blocObject","token","response","post","headers","Authorization","baseURL","window","location","protocol","hostname","data","error","getBlocsService","get"],"sources":["/home/pal/code/herokuMaat/src/services/blocService.js"],"sourcesContent":["import axios from 'axios'\n\nconst apiPort = `3003`\n\nconst blocsUrl = `api/blocs`\n\nexport const saveBlocService = async (blocObject,token) => {\n  try {\n    const response = await axios.post(blocsUrl,blocObject,{ headers: { Authorization: token }, baseURL: `${window.location.protocol}//${window.location.hostname}:${apiPort}`})\n    return response.data\n  } catch (error) {\n    return error.response.data\n  }\n}\n\nexport const getBlocsService = async token => {\n  try {\n    const response = await axios.get(blocsUrl,{ headers: { Authorization: token }, baseURL: `${window.location.protocol}//${window.location.hostname}:${apiPort}`})\n    return response.data\n  } catch (error) {\n    return error.response.data\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAI,MAAK;AAEtB,MAAMC,QAAQ,GAAI,WAAU;AAE5B,OAAO,MAAMC,eAAe,GAAG,OAAOC,UAAU,EAACC,KAAK,KAAK;EACzD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACL,QAAQ,EAACE,UAAU,EAAC;MAAEI,OAAO,EAAE;QAAEC,aAAa,EAAEJ;MAAM,CAAC;MAAEK,OAAO,EAAG,GAAEC,MAAM,CAACC,QAAQ,CAACC,QAAS,KAAIF,MAAM,CAACC,QAAQ,CAACE,QAAS,IAAGb,OAAQ;IAAC,CAAC,CAAC;IAC3K,OAAOK,QAAQ,CAACS,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOA,KAAK,CAACV,QAAQ,CAACS,IAAI;EAC5B;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAMZ,KAAK,IAAI;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACkB,GAAG,CAAChB,QAAQ,EAAC;MAAEM,OAAO,EAAE;QAAEC,aAAa,EAAEJ;MAAM,CAAC;MAAEK,OAAO,EAAG,GAAEC,MAAM,CAACC,QAAQ,CAACC,QAAS,KAAIF,MAAM,CAACC,QAAQ,CAACE,QAAS,IAAGb,OAAQ;IAAC,CAAC,CAAC;IAC/J,OAAOK,QAAQ,CAACS,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOA,KAAK,CAACV,QAAQ,CAACS,IAAI;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module"}