{"ast":null,"code":"var _jsxFileName = \"/home/pal/code/herokuMaat/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MdAccountCircle, MdVpnKey } from 'react-icons/md';\nimport { IconContext } from 'react-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport '../styles/login.css';\nimport { loginService, registerService } from '../services/loginService';\nimport { getBlocsService } from '../services/blocService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = props => {\n  _s();\n  const [validated, setValidated] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showReg, setShowReg] = useState(false);\n  const [regPassConfirm, setRegPassConfirm] = useState('');\n  const [usernameErrors, setUsernameErrors] = useState([]);\n  const [passwordErrors, setPasswordErrors] = useState([]);\n  const [loginProblems, setLoginProblems] = useState([]);\n  useEffect(() => {\n    const userJSON = window.localStorage.getItem('loggedContinentsUser');\n    if (userJSON) {\n      const loggedInUser = JSON.parse(userJSON);\n      props.setUser(loggedInUser);\n      const fetchBlocs = async () => {\n        await getBlocsService(`bearer ${loggedInUser.token}`).then(res => {\n          //console.log(\"got blocs: \",res)\n          props.setBlocs(res);\n        });\n      };\n      fetchBlocs();\n    }\n  }, []);\n  const login = async () => {\n    setValidated(false);\n    const loginObject = {\n      \"username\": username,\n      \"password\": password\n    };\n    await loginService(loginObject).then(res => {\n      const objWithToken = res.find(o => \"token\" in o);\n      if (objWithToken) {\n        props.setUser({\n          token: objWithToken.token,\n          username: username\n        });\n        window.localStorage.setItem('loggedContinentsUser', JSON.stringify({\n          token: objWithToken.token,\n          username: username\n        }));\n        const fetchBlocs = async () => {\n          await getBlocsService(`bearer ${objWithToken.token}`).then(bres => {\n            //console.log(\"got blocs because user pressed login: \",res)\n            props.setBlocs(bres);\n          });\n        };\n        fetchBlocs();\n      } else {\n        props.setUser(null);\n      }\n      let hasProblem = Array.isArray(res) && res.some(o => o.error);\n      let weCanReg = res.find(o => \"canReg\" in o) && res.find(o => \"canReg\" in o).canReg;\n      setUsernameErrors(res.filter(o => o.concerning === \"username\").map(o => o.error));\n      setPasswordErrors(res.filter(o => o.concerning === \"password\").map(o => o.error));\n      setLoginProblems(res.filter(o => o.concerning === \"login\"));\n      setShowReg(weCanReg);\n      setValidated(!weCanReg && !res.filter(o => o.concerning === \"login\"));\n    });\n  };\n  const register = async () => {\n    //console.log(\"tried to register with the new form\")\n    if (regPassConfirm === password) {\n      const regObject = {\n        \"username\": username,\n        \"password\": password\n      };\n      const dataResponse = await registerService(regObject);\n      //console.log(\"data response from register is array: \",Array.isArray(dataResponse))\n      let regHasProblems = dataResponse.find(o => \"error\" in o);\n      //console.log(\"register response: \",dataResponse)\n      if (!regHasProblems) {\n        //console.log(`register response: ${response.data} `)\n        setShowReg(false);\n      } else {\n        const usernameProblems = dataResponse.filter(o => o.concerning === \"username\");\n        const passwordProblems = dataResponse.filter(o => o.concerning === \"password\");\n        //console.log(`reg had ${usernameProblems.length} problems with username and ${passwordProblems.length} with password`)\n        setPasswordErrors(passwordProblems);\n        setUsernameErrors(usernameProblems);\n      }\n    }\n    //else{\n    //console.log(\"passwords didnt match\")\n    //props.setNotifMessage({error:\"The passwords did not match\"})\n    // }\n  };\n\n  const pressLogin = event => {\n    event.preventDefault();\n    showReg ? register() : login();\n  };\n  const pressLogout = () => {\n    window.localStorage.removeItem('loggedContinentsUser');\n    props.setUser(null);\n    setUsername('');\n    setPassword('');\n    props.setBlocs([]);\n  };\n  const handleLoginFormUserChange = event => {\n    event.preventDefault();\n    setShowReg(false);\n    setUsername(event.target.value);\n  };\n  const handleLoginFormPassChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleRegPassConfirmChange = event => {\n    setRegPassConfirm(event.target.value);\n  };\n  const loggedOutContent = /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n    value: {\n      size: \"1.25em\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      onSubmit: event => pressLogin(event),\n      children: /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"validationCustomUsername\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            hasValidation: true,\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"inputGroupPrepend\",\n                children: /*#__PURE__*/_jsxDEV(MdAccountCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Username\",\n              onChange: handleLoginFormUserChange,\n              isValid: username.length > 0 && validated && !usernameErrors.length,\n              isInvalid: usernameErrors.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: usernameErrors.map(o => o.error).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"validationCustomPassword\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            hasValidation: true,\n            validated: validated,\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"passwordInputGroupPrepend\",\n                children: /*#__PURE__*/_jsxDEV(MdVpnKey, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: handleLoginFormPassChange,\n              isValid: password.length && validated && !passwordErrors.length,\n              isInvalid: passwordErrors.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: passwordErrors.map(o => o.error).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"3\",\n          controlId: \"validationCustomPasswordConfirm\",\n          style: {\n            display: showReg ? \"inline\" : \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            hasValidation: true,\n            children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"passwordConfirmInputGroupPrepend\",\n                children: /*#__PURE__*/_jsxDEV(MdVpnKey, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 70\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              onChange: handleRegPassConfirmChange,\n              isValid: password === regPassConfirm,\n              isInvalid: password !== regPassConfirm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Passwords must match.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: showReg ? \"1\" : \"2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: showReg ? \"outline-primary\" : \"link\",\n            type: \"submit\",\n            children: showReg ? \"Register\" : \"Login/ Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              color: \"red\"\n            },\n            children: loginProblems.length ? loginProblems.map(o => o.error).join(\", \") : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-secondary\",\n            onClick: () => setShowReg(false),\n            style: {\n              display: showReg ? \"inline\" : \"none\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n  const loggedInContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: pressLogout,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Logged in as \", props.user ? props.user.username : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"fauxlinkbutton\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.user ? loggedInContent : loggedOutContent\n  }, void 0, false);\n};\n_s(LoginForm, \"h+iMvfo7dTzppgPdD2Sc3JWfeWo=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","MdAccountCircle","MdVpnKey","IconContext","Button","Form","InputGroup","Container","Row","Col","loginService","registerService","getBlocsService","LoginForm","props","validated","setValidated","username","setUsername","password","setPassword","showReg","setShowReg","regPassConfirm","setRegPassConfirm","usernameErrors","setUsernameErrors","passwordErrors","setPasswordErrors","loginProblems","setLoginProblems","userJSON","window","localStorage","getItem","loggedInUser","JSON","parse","setUser","fetchBlocs","token","then","res","setBlocs","login","loginObject","objWithToken","find","o","setItem","stringify","bres","hasProblem","Array","isArray","some","error","weCanReg","canReg","filter","concerning","map","register","regObject","dataResponse","regHasProblems","usernameProblems","passwordProblems","pressLogin","event","preventDefault","pressLogout","removeItem","handleLoginFormUserChange","target","value","handleLoginFormPassChange","handleRegPassConfirmChange","loggedOutContent","size","length","join","display","color","loggedInContent","user"],"sources":["/home/pal/code/herokuMaat/src/components/LoginForm.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\nimport { MdAccountCircle, MdVpnKey } from 'react-icons/md'\nimport { IconContext } from 'react-icons'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport '../styles/login.css'\nimport { loginService, registerService } from '../services/loginService'\nimport { getBlocsService } from '../services/blocService'\n\n\nconst LoginForm = (props) => {\n  const [validated, setValidated] = useState(false);\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [showReg, setShowReg] = useState(false)\n  const [regPassConfirm, setRegPassConfirm] = useState('')\n  const [usernameErrors, setUsernameErrors] = useState([])\n  const [passwordErrors, setPasswordErrors] = useState([])\n\n  const [loginProblems, setLoginProblems] = useState([])\n\n  useEffect(() => {\n    const userJSON = window.localStorage.getItem('loggedContinentsUser')\n    if (userJSON) {\n      const loggedInUser = JSON.parse(userJSON)\n      props.setUser(loggedInUser)\n      const fetchBlocs = async () => {\n        await getBlocsService(`bearer ${loggedInUser.token}`).then(res => {\n          //console.log(\"got blocs: \",res)\n          props.setBlocs(res)\n        })\n      }\n      fetchBlocs()\n    }\n  }, [])\n\n  const login = async () => {\n    setValidated(false)\n    const loginObject = {\"username\":username,\"password\":password}\n    await loginService(loginObject).then(res => { \n      const objWithToken = res.find(o=>\"token\" in o)\n      if(objWithToken){\n        props.setUser({token:objWithToken.token,username:username})\n        window.localStorage.setItem('loggedContinentsUser', JSON.stringify({token:objWithToken.token,username:username})) \n        const fetchBlocs = async () => {\n          await getBlocsService(`bearer ${objWithToken.token}`).then(bres => {\n            //console.log(\"got blocs because user pressed login: \",res)\n            props.setBlocs(bres)\n          })\n        }\n        fetchBlocs()\n      }else{\n        props.setUser(null)\n      }\n      let hasProblem = Array.isArray(res) && res.some(o => o.error)\n      let weCanReg = res.find(o => \"canReg\" in o) && res.find(o => \"canReg\" in o).canReg\n      setUsernameErrors(res.filter(o=>o.concerning===\"username\").map(o=>o.error))\n      setPasswordErrors(res.filter(o=>o.concerning===\"password\").map(o=>o.error))\n      setLoginProblems(res.filter(o=>o.concerning===\"login\"))\n      setShowReg(weCanReg)\n      setValidated(!weCanReg && !res.filter(o=>o.concerning===\"login\"))\n    })\n  }\n  \n\n  const register = async () => {\n    //console.log(\"tried to register with the new form\")\n    if(regPassConfirm === password){\n      const regObject= {\"username\":username,\"password\":password}\n      const dataResponse = await registerService(regObject)\n      //console.log(\"data response from register is array: \",Array.isArray(dataResponse))\n      let regHasProblems = dataResponse.find(o=>\"error\" in o)\n      //console.log(\"register response: \",dataResponse)\n      if(!regHasProblems){\n        //console.log(`register response: ${response.data} `)\n        setShowReg(false)\n      } else {\n        const usernameProblems = dataResponse.filter(o=>o.concerning===\"username\")\n        const passwordProblems = dataResponse.filter(o=>o.concerning===\"password\")\n        //console.log(`reg had ${usernameProblems.length} problems with username and ${passwordProblems.length} with password`)\n        setPasswordErrors(passwordProblems)\n        setUsernameErrors(usernameProblems)\n      }\n    }\n    //else{\n      //console.log(\"passwords didnt match\")\n      //props.setNotifMessage({error:\"The passwords did not match\"})\n   // }\n  }\n\n  const pressLogin = (event) => {\n    event.preventDefault()\n    showReg?register():login()\n  }\n\n  const pressLogout = () => {\n    window.localStorage.removeItem('loggedContinentsUser')\n    props.setUser(null)\n    setUsername('')\n    setPassword('')\n    props.setBlocs([])\n  }\n\n  const handleLoginFormUserChange = (event) => {\n    event.preventDefault()\n    setShowReg(false)\n    setUsername(event.target.value)\n  }\n\n  const handleLoginFormPassChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleRegPassConfirmChange = (event) => {\n    setRegPassConfirm(event.target.value)\n  }\n\n\n  const loggedOutContent = (\n\n    <IconContext.Provider value={{ size: \"1.25em\"}}>\n    <Form noValidate onSubmit={(event)=>pressLogin(event)}>\n      <Form.Row>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustomUsername\">\n          <InputGroup hasValidation>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"inputGroupPrepend\"><MdAccountCircle/></InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={handleLoginFormUserChange} \n              isValid={username.length>0 && validated && !usernameErrors.length}\n              isInvalid={usernameErrors.length}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {usernameErrors.map(o=>o.error).join(\", \")}\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustomPassword\">\n          <InputGroup hasValidation validated={validated}>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"passwordInputGroupPrepend\"><MdVpnKey/></InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={handleLoginFormPassChange}\n              isValid={password.length && validated && !passwordErrors.length}\n              isInvalid={passwordErrors.length}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {passwordErrors.map(o=>o.error).join(\", \")}\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n        <Form.Group as={Col} md=\"3\" controlId=\"validationCustomPasswordConfirm\" style={{display:showReg?\"inline\":\"none\"}}>\n          <InputGroup hasValidation>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"passwordConfirmInputGroupPrepend\"><MdVpnKey/></InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              onChange={handleRegPassConfirmChange}\n              isValid={password===regPassConfirm}\n              isInvalid={password!==regPassConfirm}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n            Passwords must match.\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Form.Group>\n\n        <Form.Group as={Col} md={showReg?\"1\":\"2\"}>\n          <Button variant={showReg?\"outline-primary\":\"link\"} type=\"submit\" >{showReg?\"Register\":\"Login/ Register\"}</Button>\n          <Form.Label style={{color:\"red\"}}>{loginProblems.length?loginProblems.map(o=>o.error).join(\", \"):\"\"}</Form.Label>\n        </Form.Group>\n        <Form.Group as={Col} md=\"1\">\n          <Button variant=\"outline-secondary\" onClick={()=>setShowReg(false)} style={{display:showReg?\"inline\":\"none\"}}>Cancel</Button>\n        </Form.Group>\n      </Form.Row>\n    </Form>\n      </IconContext.Provider> \n  )\n\n  const loggedInContent = (\n    <div>\n      <form onSubmit={pressLogout}>\n        <span>Logged in as {props.user?props.user.username:\"\"}</span>\n        <button type=\"submit\" className=\"fauxlinkbutton\">Logout</button>\n      </form>\n    </div>\n  )\n\n  return (\n    <>\n      {props.user?loggedInContent:loggedOutContent}\n    </>\n  )\n}\n\nexport default LoginForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}