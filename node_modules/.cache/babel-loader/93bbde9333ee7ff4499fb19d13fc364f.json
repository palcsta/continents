{"ast":null,"code":"import axios from 'axios';\nconst loginUrl = `api/login`;\nconst registerUrl = `api/register`;\nconst port = `3003`;\nconst debugObjsToStr = objArray => {\n  return objArray.map(a => `(${Object.values(a).join(\", \")})`).join(\", \");\n};\nexport const loginService = async loginObject => {\n  try {\n    const response = await axios.post(loginUrl, loginObject, {\n      baseURL: `${window.location.protocol}//${window.location.hostname}:${port}`\n    });\n    return response.data;\n  } catch (error) {\n    //console.log(`login error: ${error}, response: ${debugObjsToStr(error.response.data)} `)\n    return error.response.data;\n  }\n};\nexport const registerService = async registerObject => {\n  try {\n    const response = await axios.post(registerUrl, registerObject, {\n      baseURL: `${window.location.protocol}//${window.location.hostname}:${port}`\n    });\n    return response.data;\n  } catch (error) {\n    //console.log(`register error: ${error}, response: ${debugObjsToStr(error.response.data)}`)\n    return error.response.data;\n  }\n};","map":{"version":3,"names":["axios","loginUrl","registerUrl","port","debugObjsToStr","objArray","map","a","Object","values","join","loginService","loginObject","response","post","baseURL","window","location","protocol","hostname","data","error","registerService","registerObject"],"sources":["/home/pal/code/herokuMaat/src/services/loginService.js"],"sourcesContent":["import axios from 'axios'\n\nconst loginUrl = `api/login`\nconst registerUrl = `api/register`\nconst port = `3003`\n\n\nconst debugObjsToStr = (objArray) => {\n  return objArray.map(a => `(${ Object.values(a).join(\", \") })`).join(\", \")\n}\n\n\nexport const loginService = async loginObject => {\n  try {\n    const response = await axios.post(loginUrl,loginObject,{baseURL: `${window.location.protocol}//${window.location.hostname}:${port}`})\n    return response.data\n  } catch (error) {\n    //console.log(`login error: ${error}, response: ${debugObjsToStr(error.response.data)} `)\n    return error.response.data\n  }\n}\n\nexport const registerService = async registerObject => {\n  try {\n    const response = await axios.post(registerUrl,registerObject,{baseURL: `${window.location.protocol}//${window.location.hostname}:${port}`})\n    return response.data\n  } catch (error) {\n    //console.log(`register error: ${error}, response: ${debugObjsToStr(error.response.data)}`)\n    return error.response.data\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAI,WAAU;AAC5B,MAAMC,WAAW,GAAI,cAAa;AAClC,MAAMC,IAAI,GAAI,MAAK;AAGnB,MAAMC,cAAc,GAAIC,QAAQ,IAAK;EACnC,OAAOA,QAAQ,CAACC,GAAG,CAACC,CAAC,IAAK,IAAIC,MAAM,CAACC,MAAM,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,IAAI,CAAG,GAAE,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;AAC3E,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAG,MAAMC,WAAW,IAAI;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACb,QAAQ,EAACW,WAAW,EAAC;MAACG,OAAO,EAAG,GAAEC,MAAM,CAACC,QAAQ,CAACC,QAAS,KAAIF,MAAM,CAACC,QAAQ,CAACE,QAAS,IAAGhB,IAAK;IAAC,CAAC,CAAC;IACrI,OAAOU,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,OAAOA,KAAK,CAACR,QAAQ,CAACO,IAAI;EAC5B;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAMC,cAAc,IAAI;EACrD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAACZ,WAAW,EAACqB,cAAc,EAAC;MAACR,OAAO,EAAG,GAAEC,MAAM,CAACC,QAAQ,CAACC,QAAS,KAAIF,MAAM,CAACC,QAAQ,CAACE,QAAS,IAAGhB,IAAK;IAAC,CAAC,CAAC;IAC3I,OAAOU,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,OAAOA,KAAK,CAACR,QAAQ,CAACO,IAAI;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module"}